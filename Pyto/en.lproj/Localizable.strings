/* Add */
"add" = "Add";

/* 'Add breakpoint' */
"addBreakpoint" = "Add breakpoint";

/* Add to favorites */
"addToFavorites" = "Add to favorites";

/* Button to add script to Siri. */
"addToSiri" = "Add to Siri";

/* Message of the alert for setting arguments */
"argumentsAlert.message" = "Type new arguments.";

/* Title of the alert for setting arguments */
"argumentsAlert.title" = "Arguments";

/* Title of the menu bar item to install the Automator action */
"automator.install" = "Install Automator Action";

/* The title of the bookmarked pages section */
"bookmarks" = "Bookmarks";

/* 'Browse' */
"browse" = "Browse";

/* 'Cancel' button */
"cancel" = "Cancel";

/* 'Change' */
"change" = "Change";

/* 'Close' */
"close" = "Close";

/* 'Console' tab */
"console" = "Console";

/* Message of the alert shown when setting a current directory not containing the script */
"couldNotAccessScriptAlert.message" = "The selected directory doesn't contain this script.";

/* The current directory is readable */
"couldNotAccessScriptAlert.readable" = "The current directory is readable";

/* Select another location */
"couldNotAccessScriptAlert.selectAnotherLocation" = "Select another location";

/* Title of the alert shown when setting a current directory not containing the script */
"couldNotAccessScriptAlert.title" = "Couldn't access script";

/* Use anyway */
"couldNotAccessScriptAlert.useAnyway" = "Use anyway";

/* 'Create' button */
"create" = "Create";

/* A blank file */
"creation.blankFile" = "Blank file";

/* The title of the button shown for creating a file */
"creation.createFileTitle" = "Create file";

/* The title of the button shown for creating a folder */
"creation.createFolderTitle" = "Create folder";

/* The title of the button shown for creating a script */
"creation.createScriptTitle" = "Create script";

/* A file */
"creation.file" = "File";

/* A folder */
"creation.folder" = "Folder";

/* Import from Files */
"creation.importFromFiles" = "Import from Files";

/* Templates menu */
"creation.templates" = "Templates";

/* The message of the alert shown for creating a file */
"creation.typeFileName" = "Type the file's name";

/* The message of the alert shown for creating a folder */
"creation.typeFolderName" = "Type the new folder's name";

/* 'Debugger' */
"debugger" = "Debugger";

/* Something is decompressing */
"decompressing" = "Decompressing...";

"Definitions" = "Definitions";

/* Done button */
"done" = "Done";

/* Download something */
"download" = "Download";

/* Download all */
"downloadAll" = "Download all";

/* A dialog asking the user if they want to download the documentation(s). Replace %@ by the documentations to download. */
"downloadDocumentation" = "Do you want to download the documentations for %@?";

/* The title of the downloadable documentations view */
"downloads" = "Downloads";

/* The message of the alert for adding an editor action. */
"editorActionsTableViewController.createEditorActionAlertMessage" = "Type below the command to be executed. The first argument is the Python program to be executed. Type \"$SCRIPT\" for passing the edited script's path.\n\n Example:\npy2to3 -w $SCRIPT";

/* The title of the alert for adding an editor action. */
"editorActionsTableViewController.createEditorActionAlertTitle" = "Add script";

/* The title of the view controller for managing editor actions. */
"editorActionsTableViewController.title" = "Editor actions";

/* Error */
"error" = "Error";

/* Message shown when the user typed an empty name */
"errors.emptyName" = "Cannot create a file with an empty name.";

/* The title of alerts shown when an error occurred while creating a file */
"errors.errorCreatingFile" = "Error creating file!";

/* The title of alerts shown when an error occurred while creating a folder */
"errors.errorCreatingFolder" = "Error creating folder!";

/* Title of the alert shown when an error occurred while moving a file */
"errors.errorMovingFile" = "Error moving folder!";

/* The title of the alert shown when a script cannot be read */
"errors.errorReadingFile" = "Error reading file!";

/* Title of the alert shown when an error occurred while removing a file */
"errors.errorRemovingFile" = "Error removing file!";

/* Title of the alert shown when an error occurred while renaming a file */
"errors.errorRenamingFile" = "Error renaming file!";

/* The title of the alert shown when a widget is set */
"errors.errorSettingWidget" = "Error setting widget";

/* Title of the alert shown when code cannot be written */
"errors.errorWrittingToScript" = "Error saving script!";

/* An error message shown in the Watch when a script is not set */
"errors.noWatchScript" = "Setup a script to run here from Pyto's settings.";

/* 'Find' */
"find" = "Find";

/* The body of the notification shown when the free trial expired */
"freetrial.expired.message" = "Thanks for using Pyto. Purchase it to continue using the app.";

/* The title of the notification shown when the free trial expired */
"freetrial.expired.title" = "Free trial expired";

/* (No Comment) */
"fullversion" = "Full Version";

/* The text describing the full version. */
"fullversion.promotion" = "The full version gives you access to Numpy, Pandas, Matplotlib and more libraries with C extensions. To see a list, press cancel.";

/* Go Back */
"goBack" = "Previous Tab";

/* Go Forward */
"goForward" = "Next Tab";

/* 'Documentation' button */
"help.documentation" = "Documentation";

/* The title of the documentations section */
"help.documentations" = "Documentations";

/* 'Help' button */
"help.help" = "Help";

/* 'Acknowledgments' button */
"help.licenses" = "Acknowledgments";

/* 'Samples' button */
"help.samples" = "Samples";

/* The message of the alert for selecting a sample */
"help.selectSample" = "Select a sample";

/* 'Source code' button */
"help.sourceCode" = "Source code";

/* 'Theme' button */
"help.theme" = "Theme";

/* The inspector title */
"inspector" = "Inspector";

/* Install */
"install" = "Install";

/* Description for CTRL+C key command. */
"interrupt" = "Interrupt";

/* 'Line number' */
"lineNumber" = "Line number";

/* (No Comment) */
"liteversion" = "Lite Version";

/* The text describing the lite version. */
"liteversion.promotion" = "The lite version does not contain any library with C extensions except PIL. Numpy, Pandas, Matplotlib etc require the full version.";

/* The menu item for setting breakpoint */
"menuItems.breakpoint" = "Breakpoint";

/* The menu item to build a project */
"menuItems.build" = "Build";

/* The menu item to build a project's documentation */
"menuItems.buildDocs" = "Build documentation";

/* The menu item to clean a project */
"menuItems.clean" = "Clean";

/* Close terminal tab */
"menuItems.closeTab" = "Close Tab";

/* The 'Copy' menu item */
"menuItems.copy" = "Copy";

/* Menu item for hiding completions */
"menuItems.hideCompletions" = "Hide Suggestions";

/* The 'Hide suggestions' menu item */
"menuItems.hideSuggestions" = "Hide Suggestions";

/* Menu item for hiding the terminal */
"menuItems.hideTerminal" = "Hide Console";

/* The 'Move' menu item */
"menuItems.move" = "Move";

/* New terminal tab */
"menuItems.newTab" = "New Tab";

/* The 'Open' menu item */
"menuItems.open" = "Open";

/* The 'Open in new Window' menu item */
"menuItems.openInNewWindow" = "Open in new Window";

/* The 'Redo' menu item */
"menuItems.redo" = "Redo";

/* The 'Remove' menu item */
"menuItems.remove" = "Remove";

/* The 'Rename' menu item */
"menuItems.rename" = "Rename";

/* The 'Run' menu item */
"menuItems.run" = "Run";

/* The menu item to save a file to Files */
"menuItems.saveToFiles" = "Save to Files";

/* The menu item to share a file */
"menuItems.share" = "Share";

/* Menu item for showing completions */
"menuItems.showCompletions" = "Show Suggestions";

/* Menu item for showing the terminal */
"menuItems.showTerminal" = "Show Console";

/* The 'Toggle Comment' menu item */
"menuItems.toggleComment" = "Toggle Comment";

/* The 'Undo' menu item */
"menuItems.undo" = "Undo";

/* The subtitle of the view controller for displaying modules */
"modulesTableViewController.subtitle" = "Swipe to delete a module so it will be reloaded the next time it will be imported.";

/* The title of the view controller for displaying modules */
"modulesTableViewController.title" = "Loaded modules";

/* Action for moving file at current directory */
"moveHere" = "Move here";

/* Title for command for selecting next suggestion */
"nextSuggestion" = "Next suggestion";

/* The text shown when a folder is empty */
"noFiles" = "No files in folder";

/* No comment provided by engineer. */
"noSelectedScript" = "No selected script";

/* The text shown when a folder has subdirectories but no files */
"numberOfFiles" = "%i files";

/* 'Ok' button */
"ok" = "Ok";

/* Begin free trial */
"onboarding.beginFreeTrial" = "Begin free trial (3 days)";

/* The second presented feature */
"onboarding.editor" = "Edit code with syntax highlighting and code completion";

/* The first featured feature */
"onboarding.features.1" = "Edit and run code";

/* The second featured feature */
"onboarding.features.2" = "Integration with Shortcuts";

/* The third featured feature */
"onboarding.features.3" = "Code Widgets and UIs";

/* The fourth featured feature */
"onboarding.features.4" = "System APIs";

/* The fifth featured feature */
"onboarding.features.5" = "Pure Python libraries from PyPI";

/* The sixth featured feature */
"onboarding.features.6" = "C/C++ Compiler & Interpreter";

/* The seventh featured feature */
"onboarding.features.7" = "C/C++ Bitcode Extensions";

/* 'Full' */
"onboarding.full" = "Full";

/* The button for purchasing the full featured version */
"onboarding.fullFeatured %@" = "Full featured %@";

/* The button linking to a list of contained libraries in the pro version */
"onboarding.libraries" = "Contains these libraries";

/* 'Limited' */
"onboarding.limited" = "Lite";

/* The button for purchasing the limited version */
"onboarding.limitedVersion %@" = "No C extensions %@";

/* The footnote below the button for purchasing the limited version */
"onboarding.noExtensionsFootnote" = "Does not contain numpy, pandas and any other library with C extensions";

/* The button for choosing a pricing */
"onboarding.purchase" = "Purchase";

/* A warning so people don't email me about how to install Tensorflow */
"onboarding.purchaseWarning" = "Due to technical reasons, no other library with C extensions can be installed from PyPI. That's why they need to be included in the app.";

/* The third presented feature */
"onboarding.pypi" = "Install pure Python modules from PyPI";

/* The button for restoring purchases */
"onboarding.restore" = "Restore";

/* The first presented feature */
"onboarding.runCode" = "Run Python code locally";

/* The fourth presented feature */
"onboarding.shortcuts" = "Run scripts or custom code with Siri Shortcuts.";

/* The text below the title */
"onboarding.subtitle" = "You can try Pyto for free during 3 days. Once your free trial expired, you'll need to purchase one of the two options below to continue using the app. This is not a subscription so there is no need to cancel the trial.";

/* The title of the onboarding view */
"onboarding.title" = "Welcome";

/* The title of the onboarding view */
"onboarding.title.ios15" = "Welcome";

/* The title of the onboarding view */
"onboarding.title.ios15.genderless" = "Welcome to Pyto";

/* Trial period ended */
"onboarding.trialEnded" = "Trial period ended";

/* The text below the purchase button */
"onboarding.twoPricesAvailable" = "Two prices available";

/* The fifth presented feature */
"onboarding.widgetsuis" = "Code Widgets and UIs";

/* 1 file */
"oneFile" = "1 file";

/* 'Enter PIP' */
"pip.enter" = "Enter PIP";

/* 'Exit PIP' */
"pip.exit" = "Exit PIP";

/* Project */
"project" = "Project";

/* 'Open' & NEW */
"projectsBrowser.open" = "Open";

/* 'Recent' & NEW */
"projectsBrowser.recent" = "Recent";

/* 'Projects' & NEW */
"projectsBrowser.title" = "Projects";

/* The author of the project */
"projectCreator.author" = "Author";

/* Include C Extension */
"projectCreator.cext" = "Include C Extension";

/* Include UI */
"projectCreator.ui" = "Include UI";

/* The description of the project */
"projectCreator.description" = "Description";

/* The language pf the project */
"projectCreator.language" = "Language";

/* The name of the project */
"projectCreator.name" = "Name";

/* The label of the switch for toggling Sphinx Docs */
"projectCreator.sphinxDocumentation" = "Sphinx Documentation";

/* The title of the project creator */
"projectCreator.title" = "New Project";

/* The URL of the project */
"projectCreator.url" = "URL";

/* Author */
"pypi.author" = "Author";

/* Bundled packages */
"pypi.bundled" = "Bundled";

/* Credits displayed on the bottom of the PyPi installer */
"pypi.credits" = "UI inspired by ";

/* The subtitle of a package that is full version exclusive */
"pypi.fullversion" = "Full version";

/* The text displayed when a package has C extensions */
"pypi.hasCext" = "This package cannot be installed because it needs to be compiled, and iOS apps can't dynamically load external binaries.";

/* Text displayed on the PyPi installer */
"pypi.info" = "Install pure Python packages with PyPI.";

/* Install */
"pypi.install" = "Install";

/* Installed packages */
"pypi.installed" = "Installed";

/* Button for installing a wheel */
"pypi.installWheel" = "Install wheel";

/* The message of the alert shown before installing a wheel */
"pypi.installWheelDialog" = "Do you want to install this wheel?";

/* The title of the 'Links' section */
"pypi.links" = "Links";

/* Maintainer */
"pypi.maintainer" = "Maintainer";

/* A button on the context menu to show more info */
"pypi.moreInfo" = "More information";

/* Package not found */
"pypi.packageNotFound" = "Package not found";

/* The title of the 'Project' section */
"pypi.project" = "Project";

/* Library is provided by Pyto */
"pypi.providedByPyto" = "Provided by Pyto";

/* Remove (package) */
"pypi.remove" = "Remove";

/* The title of the 'Requirements' section */
"pypi.requirements" = "Requirements";

/* The placeholder of the search bar */
"pypi.searchBarPlaceholder" = "Python package";

/* Select a version */
"pypi.selectVersion" = "Select a version";

/* Uninstall a package */
"pypi.uninstall" = "Uninstall";

/* Update */
"pypi.update" = "Update";

/* Update all */
"pypi.updateAll" = "Update all";

/* Updatable packages */
"pypi.updates" = "Updates";

/* Unlock a full version exclusive package. Replace %@ by the price */
"pypi.unlock %@" = "Unlock %@";

/* Version */
"pypi.version" = "Version";

/* A button on the context menu to show the package on PyPi */
"pypi.viewOnPyPi" = "View on PyPI.org";

/* A message shown in the console while downloading a module (Downloading module 100%) */
"python.downloadingModule" = "Downloading %@ %@";

/* The message of the alert shown when a module is being downloaded for the first time */
"python.downloadingModuleAlert.explaination" = "Pyto is downloading %@ scripts. The scripts are not included in the app's bundle so the download size is smaller. Included third party libraries such as numpy, scipy, pandas etc will take longer to import for the first time, but then the scripts will remain on disk. An internet connection will be needed for the first time you import an included module, then you'll not. This popup will not appear again.";

/* I understand */
"python.downloadingModuleAlert.iUnderstand" = "I understand";

/* A notification sent to remind that a script is running in background */
"python.isRunningScript" = "%@ has been running since %@.";

/* Message of the alert shown for renaming a file */
"renaming.message" = "Type the new file's name";

/* 'Rename' button */
"renaming.rename" = "Rename";

/* Title of the alert shown for renaming a file */
"renaming.title" = "Rename file";

/* 'REPL' tab */
"repl" = "REPL";

/* 'Replace' */
"replace" = "Replace";

/* 'Resume' */
"resume" = "Resume";

/* Description for key command for running and setting arguments. */
"runAndSetArguments" = "Run with arguments";

/* 'Runtime' button on the editor */
"runtime" = "Runtime";

/* The title of the examples gallery */
"samplesTitle" = "Examples";

/* Placeholder of the search bar */
"search" = "Search";

/* Settings */
"settings" = "Settings";

/* The working directory on compact view */
"sidebar.cwd" = "Working directory";

/* Edit sidebar */
"sidebar.editSidebar" = "Edit sidebar";

/* The 'Examples' sidebar section */
"sidebar.examples" = "Examples";

/* The 'Favourites' sidebar section */
"sidebar.favorites" = "Favorites";

/* The 'Loaded modules' sidebar section */
"sidebar.loadedModules" = "Loaded modules";

/* The 'Projects' sidebar section */
"sidebar.projects" = "Projects";

/* The 'PyPI' sidebar section */
"sidebar.pypi" = "PyPI";

/* The 'Python' sidebar section */
"sidebar.python" = "Python";

/* The 'Recent' sidebar section */
"sidebar.recent" = "Recent";

/* The 'Resources' sidebar section */
"sidebar.resources" = "Resources";

/* The 'Run module' sidebar section */
"sidebar.runModule" = "Run module";

/* The 'Scripts' sidebar section */
"sidebar.scripts" = "Scripts";

/* Stop the execution of a script */
"stop" = "Stop";

/* 'Unindent' key command */
"unindent" = "Un-indent";

/* Untitled */
"untitled" = "Untitled";

/* (No Comment) */
"upgradeToFull" = "Upgrade";

/* The message of the alert for adding a new suggestion */
"watchInputSuggestions.message" = "Type a new suggestion";

/* The title of the alert for adding a new suggestion */
"watchInputSuggestions.title" = "Add suggestion";

/* Title of the button for collapsing a widget. */
"widget.alertMessage" = "The widget script was set. It will be displayed on the \"Pyto\" Today widget.";

/* The message of the alert displayed when a widget script is set */
"widget.alertTitle" = "Widget ready to use";

/* Title of the button for collapsing a widget. */
"widget.showLess" = "Show Less";

/* Title of the button for expanding a widget. */
"widget.showMore" = "Show More";

/* The title of the template chooser */
"newScript" = "New script";

/* The title of the template chooser */
"importTemplate" = "Import template";

"templates.blank" = "Blank Script";

"templates.cli" = "Command Line";

"templates.pytoui" = "PytoUI View";

"templates.cext" = "C Extension";
